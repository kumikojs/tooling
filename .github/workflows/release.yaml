name: Changesets Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  version:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout code repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
          registry-url: "https://registry.npmjs.org"

      - name: Setup npmrc for publishing
        run: |
          cat << EOF > .npmrc
          //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          EOF

      - name: Install dependencies
        run: pnpm install

      - name: Generate commit message
        id: commit-msg
        run: |
          # Extraire les infos des packages avec pnpm ls
          PACKAGES_INFO=$(pnpm ls -r --json \
            | jq -r '.[] | select(.private != true) | "\(.name)@\(.version)"' \
            | tr '\n' ' ' \
            | sed 's/ $//')

          if [ -n "$PACKAGES_INFO" ]; then
            echo "message=ci(release): $PACKAGES_INFO" >> $GITHUB_OUTPUT
          else
            echo "message=ci(release): version bump" >> $GITHUB_OUTPUT
          fi

          # Debug
          echo "Debug - Packages info:"
          echo "$PACKAGES_INFO"
          echo "Debug - Final message:"
          cat $GITHUB_OUTPUT

      - name: Create and publish versions
        uses: changesets/action@v1
        with:
          version: pnpm run version-packages
          commit: ${{ steps.commit-msg.outputs.message }}
          title: ${{ steps.commit-msg.outputs.message }}
          publish: pnpm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
